// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Red Spring Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias 15 : TYPE_REDSPRING

// Function declarations
reserve function RedSpring_DebugDraw
reserve function RedSpring_DebugSpawn

// Static Values
public value RedSpring_value28 = 0;

// Tables
public table RedSpring_table16
	0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 2, 0, 1, 2, 3
	0, 0, 1, 2, 0, 1, 2, 3
end table

public table RedSpring_table17
	16, 16, 16, 16, 16, 16, 14, 12, 10, 8, 6, 4, 2, 0, -2, -4
	
end table

public table RedSpring_CollisionTypes
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1
	
end table


function RedSpring_DebugDraw
	temp1 = object.direction
	temp0 = object[0].value17
	temp0 -= RedSpring_value28
	GetTableValue(object.direction, temp0, RedSpring_table16)
	DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
	object.direction = temp1
end function


function RedSpring_DebugSpawn
	temp0 = object[0].value17
	temp0 -= RedSpring_value28
	CreateTempObject(TypeName[Red Spring], temp0, object.xpos, object.ypos)
end function


event ObjectMain
	temp1 = object.propertyValue
	temp2 = 0
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		switch temp1
		case 0
			temp0 = object.value1
			if object[currentPlayer].gravity == GRAVITY_AIR
				temp0 = 1
			end if
			if object[currentPlayer].collisionMode > CMODE_FLOOR
				if object[currentPlayer].yvel < 0
					temp0 = 1
				end if
			end if
			if temp0 == 0
				BoxCollisionTest(C_BOX, object.entityPos, -14, -8, 14, 8, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
				if object[currentPlayer].gravity == GRAVITY_AIR
					BoxCollisionTest(C_TOUCH, object.entityPos, -14, -10, 14, -6, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
				else
					BoxCollisionTest(C_TOUCH, object.entityPos, -14, -12, 14, -6, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
				end if
				if checkResult == 1
					object[currentPlayer].value10 = ANI_WALKING
					if object[currentPlayer].animation == ANI_RUNNING
						object[currentPlayer].value10 = ANI_RUNNING
					end if
					if object[currentPlayer].animation == ANI_PEELOUT
						object[currentPlayer].value10 = ANI_PEELOUT
					end if
					object.value0 = 1
					object[currentPlayer].state = PlayerObject_HandleAir
					object[currentPlayer].tileCollisions = 1
					object[currentPlayer].gravity = GRAVITY_AIR
					object[currentPlayer].speed = object[currentPlayer].xvel
					object[currentPlayer].yvel = -0x100000
					object[currentPlayer].yvel -= object[currentPlayer].value25
					if object.propertyValue >= 128
						object[currentPlayer].animation = ANI_TWIRL
						object[currentPlayer].prevAnimation = ANI_TWIRL
						object[currentPlayer].frame = 0
						object[currentPlayer].animationSpeed = 40
					else
						object[currentPlayer].animation = ANI_BOUNCING
					end if
					object[currentPlayer].value1 = 0
					PlaySfx(SfxName[Spring], 0)
				end if
			else
				if object[currentPlayer].yvel >= 0
					BoxCollisionTest(C_PLATFORM, object.entityPos, -14, -8, 14, 8, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
					BoxCollisionTest(C_TOUCH, object.entityPos, -14, -10, 14, -6, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
					if checkResult == 1
						object[currentPlayer].value10 = ANI_WALKING
						if object[currentPlayer].animation == ANI_RUNNING
							object[currentPlayer].value10 = ANI_RUNNING
						end if
						if object[currentPlayer].animation == ANI_PEELOUT
							object[currentPlayer].value10 = ANI_PEELOUT
						end if
						object.value0 = 1
						object[currentPlayer].state = PlayerObject_HandleAir
						object[currentPlayer].tileCollisions = 1
						object[currentPlayer].gravity = GRAVITY_AIR
						object[currentPlayer].speed = object[currentPlayer].xvel
						object[currentPlayer].yvel = -0x100000
						if object.propertyValue >= 128
							object[currentPlayer].animation = ANI_TWIRL
							object[currentPlayer].prevAnimation = ANI_TWIRL
							object[currentPlayer].frame = 0
							object[currentPlayer].animationSpeed = 40
						else
							object[currentPlayer].animation = ANI_BOUNCING
						end if
						object[currentPlayer].value1 = 0
						PlaySfx(SfxName[Spring], 0)
					end if
				end if
			end if
			break
		case 1
			BoxCollisionTest(C_BOX, object.entityPos, -8, -14, 8, 14, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			if object[currentPlayer].gravity == GRAVITY_GROUND
				BoxCollisionTest(C_TOUCH, object.entityPos, 6, -14, 11, 14, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
				if checkResult == 1
					object.value0 = 1
					object[currentPlayer].tileCollisions = 1
					object[currentPlayer].angle = 0
					object[currentPlayer].speed = 0x100000
					object[currentPlayer].collisionMode = CMODE_FLOOR
					object[currentPlayer].pushing = 0
					object[currentPlayer].direction = FLIP_NONE
					object[currentPlayer].controlLock = 12
					PlaySfx(SfxName[Spring], 0)
					if object[currentPlayer].state != PlayerObject_HandleRolling
						object[currentPlayer].state = PlayerObject_HandleGround
						object[currentPlayer].animation = ANI_RUNNING
					end if
				end if
			else
				if object.value7 == 1
					BoxCollisionTest(C_TOUCH, object.entityPos, 6, -4, 11, 4, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
					if checkResult == 1
						object.value0 = 1
						object[currentPlayer].tileCollisions = 1
						object[currentPlayer].angle = 0
						object[currentPlayer].speed = 0x100000
						object[currentPlayer].yvel = 0
						object[currentPlayer].collisionMode = CMODE_FLOOR
						object[currentPlayer].pushing = 0
						object[currentPlayer].direction = FLIP_NONE
						object[currentPlayer].controlLock = 12
						PlaySfx(SfxName[Spring], 0)
						if object[currentPlayer].state != PlayerObject_RollingJump
							object[currentPlayer].animation = 12
							if object[currentPlayer].animation != ANI_JUMPING
								object[currentPlayer].animation = ANI_RUNNING
							end if
							object.animationSpeed = object.speed
							object[currentPlayer].animationSpeed *= 80
							object[currentPlayer].animationSpeed /= 0x60000
						end if
					end if
				end if
			end if
			break
		case 2
			BoxCollisionTest(C_BOX, object.entityPos, -8, -14, 8, 14, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			if object[currentPlayer].gravity == GRAVITY_GROUND
				BoxCollisionTest(C_TOUCH, object.entityPos, -10, -14, -6, 14, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
				if checkResult == 1
					object.value0 = 1
					object[currentPlayer].tileCollisions = 1
					object[currentPlayer].speed = -0x100000
					object[currentPlayer].collisionMode = CMODE_FLOOR
					object[currentPlayer].pushing = 0
					object[currentPlayer].direction = FLIP_X
					object[currentPlayer].controlLock = 15
					PlaySfx(SfxName[Spring], 0)
					if object[currentPlayer].state != PlayerObject_HandleRolling
						object[currentPlayer].state = PlayerObject_HandleGround
						object[currentPlayer].animation = ANI_RUNNING
					end if
				end if
			else
				if object.value7 == 1
					BoxCollisionTest(C_TOUCH, object.entityPos, -10, -14, -6, 14, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
					if checkResult == 1
						object.value0 = 1
						object[currentPlayer].tileCollisions = 1
						object[currentPlayer].speed = -0x100000
						object[currentPlayer].yvel = 0
						object[currentPlayer].collisionMode = CMODE_FLOOR
						object[currentPlayer].pushing = 0
						object[currentPlayer].direction = FLIP_X
						object[currentPlayer].controlLock = 15
						PlaySfx(SfxName[Spring], 0)
						if object[currentPlayer].state != PlayerObject_RollingJump
							object[currentPlayer].animation = 12
							if object[currentPlayer].animation != ANI_JUMPING
								object[currentPlayer].animation = ANI_RUNNING
							end if
							object.animationSpeed = object.speed
							FlipSign(object[currentPlayer].animationSpeed)
							object[currentPlayer].animationSpeed *= 80
							object[currentPlayer].animationSpeed /= 0x60000
						end if
					end if
				end if
			end if
			break
		case 3
			BoxCollisionTest(C_BOX, object.entityPos, -14, -8, 14, 8, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			if object[currentPlayer].yvel <= 0
				BoxCollisionTest(C_TOUCH, object.entityPos, -14, 6, 14, 10, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
				if checkResult == 1
					if object[currentPlayer].collisionMode == CMODE_LWALL
						FlipSign(object[currentPlayer].speed)
						FlipSign(object[currentPlayer].xvel)
					end if
					object.value0 = 1
					object[currentPlayer].state = PlayerObject_HandleAir
					object[currentPlayer].tileCollisions = 1
					object[currentPlayer].gravity = GRAVITY_AIR
					object[currentPlayer].speed = object[currentPlayer].xvel
					object[currentPlayer].yvel = 0x100000
					object[currentPlayer].value1 = 0
					PlaySfx(SfxName[Spring], 0)
				end if
			end if
			break
		case 4
			temp0 = object[currentPlayer].xpos
			temp0 -= object.xpos
			temp0 += 0x100000
			temp0 >>= 17
			if temp0 < 0
				temp0 = 0
			end if
			if temp0 > 15
				temp0 = 15
			end if
			GetTableValue(temp1, temp0, RedSpring_table17)
			FlipSign(temp1)
			GetTableValue(temp4, temp0, RedSpring_CollisionTypes)
			BoxCollisionTest(temp4, object.entityPos, -16, temp1, 16, 16, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			if checkResult != 1
				GetBit(temp3, object.value2, temp2)
				if temp3 == 1
					temp3 = object[currentPlayer].xpos
					temp3 -= object.xpos
					temp3 >>= 16
					Abs(temp3)
					if temp3 < 16
						if object[currentPlayer].yvel >= 0
							object[currentPlayer].iypos = object[currentPlayer].collisionBottom
							FlipSign(object[currentPlayer].ypos)
							temp1 <<= 16
							object[currentPlayer].ypos += temp1
							object[currentPlayer].ypos += object.ypos
							checkResult = 1
						end if
					end if
				end if
			end if
			if checkResult == 1
				if temp0 >= 6
					object[currentPlayer].value10 = ANI_WALKING
					if object[currentPlayer].animation == ANI_RUNNING
						object[currentPlayer].value10 = ANI_RUNNING
					end if
					if object[currentPlayer].animation == ANI_PEELOUT
						object[currentPlayer].value10 = ANI_PEELOUT
					end if
					object.value0 = 1
					if object[currentPlayer].collisionMode == CMODE_LWALL
						FlipSign(object[currentPlayer].speed)
						FlipSign(object[currentPlayer].xvel)
					end if
					object[currentPlayer].state = PlayerObject_HandleAir
					object[currentPlayer].tileCollisions = 1
					object[currentPlayer].gravity = GRAVITY_AIR
					object[currentPlayer].xvel = 0x100000
					object[currentPlayer].speed = object[currentPlayer].xvel
					object[currentPlayer].yvel = -0x100000
					object[currentPlayer].yvel -= object[currentPlayer].value25
					object[currentPlayer].value1 = 0
					object[currentPlayer].direction = FLIP_NONE
					if object.propertyValue >= 128
						object[currentPlayer].animation = ANI_TWIRL
					else
						object[currentPlayer].animation = ANI_BOUNCING
					end if
					PlaySfx(SfxName[Spring], 0)
					SetBit(object.value2, temp2, 0)
				else
					SetBit(object.value2, temp2, 1)
				end if
			else
				SetBit(object.value2, temp2, 0)
			end if
			break
		case 5
			temp0 = object[currentPlayer].xpos
			temp0 -= object.xpos
			temp0 += 0x100000
			temp0 >>= 17
			if temp0 < 0
				temp0 = 0
			end if
			if temp0 > 15
				temp0 = 15
			end if
			temp0 -= 15
			Abs(temp0)
			GetTableValue(temp1, temp0, RedSpring_table17)
			FlipSign(temp1)
			GetTableValue(temp4, temp0, RedSpring_CollisionTypes)
			BoxCollisionTest(temp4, object.entityPos, -16, temp1, 16, 16, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			if checkResult != 1
				GetBit(temp3, object.value2, temp2)
				if temp3 == 1
					temp3 = object[currentPlayer].xpos
					temp3 -= object.xpos
					temp3 >>= 16
					Abs(temp3)
					if temp3 < 16
						if object[currentPlayer].yvel >= 0
							object[currentPlayer].iypos = object[currentPlayer].collisionBottom
							FlipSign(object[currentPlayer].ypos)
							temp1 <<= 16
							object[currentPlayer].ypos += temp1
							object[currentPlayer].ypos += object.ypos
							checkResult = 1
						end if
					end if
				end if
			end if
			if checkResult == 1
				if temp0 >= 6
					object[currentPlayer].value10 = ANI_WALKING
					if object[currentPlayer].animation == ANI_RUNNING
						object[currentPlayer].value10 = ANI_RUNNING
					end if
					if object[currentPlayer].animation == ANI_PEELOUT
						object[currentPlayer].value10 = ANI_PEELOUT
					end if
					object.value0 = 1
					if object[currentPlayer].collisionMode == CMODE_LWALL
						FlipSign(object[currentPlayer].speed)
						FlipSign(object[currentPlayer].xvel)
					end if
					object[currentPlayer].state = PlayerObject_HandleAir
					object[currentPlayer].tileCollisions = 1
					object[currentPlayer].gravity = GRAVITY_AIR
					object[currentPlayer].xvel = -0x100000
					object[currentPlayer].speed = object[currentPlayer].xvel
					object[currentPlayer].yvel = -0x100000
					object[currentPlayer].yvel -= object[currentPlayer].value25
					object[currentPlayer].value1 = 0
					object[currentPlayer].direction = FLIP_X
					if object.propertyValue >= 128
						object[currentPlayer].animation = ANI_TWIRL
					else
						object[currentPlayer].animation = ANI_BOUNCING
					end if
					PlaySfx(SfxName[Spring], 0)
					SetBit(object.value2, temp2, 0)
				else
					SetBit(object.value2, temp2, 1)
				end if
			else
				SetBit(object.value2, temp2, 0)
			end if
			break
		case 6
			temp0 = object[currentPlayer].xpos
			temp0 -= object.xpos
			temp0 += 0x100000
			temp0 >>= 17
			if temp0 < 0
				temp0 = 0
			end if
			if temp0 > 15
				temp0 = 15
			end if
			GetTableValue(temp1, temp0, RedSpring_table17)
			BoxCollisionTest(C_BOX, object.entityPos, -16, -16, 16, temp1, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			if checkResult != 4
				GetBit(temp3, object.value2, temp2)
				if temp3 == 1
					temp3 = object[currentPlayer].xpos
					temp3 -= object.xpos
					temp3 >>= 16
					Abs(temp3)
					if temp3 < 16
						if object[currentPlayer].yvel <= 0
							object[currentPlayer].iypos = object[currentPlayer].collisionTop
							FlipSign(object[currentPlayer].ypos)
							temp1 <<= 16
							object[currentPlayer].ypos += temp1
							object[currentPlayer].ypos += object.ypos
							checkResult = 1
						end if
					end if
				end if
			end if
			if checkResult == 4
				if temp0 >= 6
					object.value0 = 1
					if object[currentPlayer].collisionMode == CMODE_LWALL
						FlipSign(object[currentPlayer].speed)
						FlipSign(object[currentPlayer].xvel)
					end if
					object[currentPlayer].state = PlayerObject_HandleAir
					object[currentPlayer].tileCollisions = 1
					object[currentPlayer].gravity = GRAVITY_AIR
					object[currentPlayer].xvel = 0x100000
					object[currentPlayer].speed = object[currentPlayer].xvel
					object[currentPlayer].yvel = 0x100000
					object[currentPlayer].value1 = 0
					object[currentPlayer].direction = FLIP_NONE
					PlaySfx(SfxName[Spring], 0)
					SetBit(object.value2, temp2, 0)
				else
					SetBit(object.value2, temp2, 1)
				end if
			else
				SetBit(object.value2, temp2, 0)
			end if
			break
		case 7
			temp0 = object[currentPlayer].xpos
			temp0 -= object.xpos
			temp0 += 0x100000
			temp0 >>= 17
			if temp0 < 0
				temp0 = 0
			end if
			if temp0 > 15
				temp0 = 15
			end if
			temp0 -= 15
			Abs(temp0)
			GetTableValue(temp1, temp0, RedSpring_table17)
			BoxCollisionTest(C_BOX, object.entityPos, -16, -16, 16, temp1, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			if checkResult != 4
				GetBit(temp3, object.value2, temp2)
				if temp3 == 1
					temp3 = object[currentPlayer].xpos
					temp3 -= object.xpos
					temp3 >>= 16
					Abs(temp3)
					if temp3 < 16
						if object[currentPlayer].yvel <= 0
							object[currentPlayer].iypos = object[currentPlayer].collisionTop
							FlipSign(object[currentPlayer].ypos)
							temp1 <<= 16
							object[currentPlayer].ypos += temp1
							object[currentPlayer].ypos += object.ypos
							checkResult = 1
						end if
					end if
				end if
			end if
			if checkResult == 4
				if temp0 >= 6
					object.value0 = 1
					if object[currentPlayer].collisionMode == CMODE_LWALL
						FlipSign(object[currentPlayer].speed)
						FlipSign(object[currentPlayer].xvel)
					end if
					object[currentPlayer].state = PlayerObject_HandleAir
					object[currentPlayer].tileCollisions = 1
					object[currentPlayer].gravity = GRAVITY_AIR
					object[currentPlayer].xvel = -0x100000
					object[currentPlayer].speed = object[currentPlayer].xvel
					object[currentPlayer].yvel = 0x100000
					object[currentPlayer].value1 = 0
					object[currentPlayer].direction = FLIP_X
					PlaySfx(SfxName[Spring], 0)
					SetBit(object.value2, temp2, 0)
				else
					SetBit(object.value2, temp2, 1)
				end if
			else
				SetBit(object.value2, temp2, 0)
			end if
			break
		end switch
		temp2++
	next
	object.frame = object.propertyValue
	object.frame &= 127
	if object.value0 != 0
		switch object.value0
		case 2
		case 3
			break
		case 1
			object.frame += 8
			break
		case 4
		case 5
		case 6
		case 7
		case 8
		case 9
			object.frame += 16
			break
		end switch
		object.value0++
		if object.value0 >= 10
			object.value0 = 0
		end if
	end if
end event


event ObjectDraw
	GetTableValue(object.direction, object.frame, RedSpring_table16)
	DrawSpriteFX(object.frame, FX_FLIP, object.xpos, object.ypos)
end event


event ObjectStartup

	LoadSpriteSheet("Global/Items.gif")

	foreach (TypeName[Red Spring], arrayPos0, ALL_ENTITIES)
		temp0 = object[arrayPos0].propertyValue
		temp0 &= 127
		if temp0 > 8
			object[arrayPos0].propertyValue -= 8
			object[arrayPos0].value7 = 1
		end if
	next

	// Spring frames
	SpriteFrame(-16, -8, 32, 16, 52, 1)
	SpriteFrame(-8, -16, 16, 32, 85, 1)
	SpriteFrame(-8, -16, 16, 32, 118, 67)
	SpriteFrame(-16, -8, 32, 16, 157, 116)
	SpriteFrame(-16, -16, 32, 32, 118, 1)
	SpriteFrame(-16, -16, 32, 32, 157, 50)
	SpriteFrame(-16, -16, 32, 32, 118, 1)
	SpriteFrame(-16, -16, 32, 32, 157, 50)
	SpriteFrame(-16, 0, 32, 8, 52, 1)
	SpriteFrame(-8, -16, 8, 32, 93, 1)
	SpriteFrame(0, -16, 8, 32, 118, 67)
	SpriteFrame(-16, -8, 32, 8, 157, 124)
	SpriteFrame(-17, -10, 27, 27, 52, 186)
	SpriteFrame(-17, -10, 27, 27, 52, 186)
	SpriteFrame(-17, -10, 27, 27, 52, 186)
	SpriteFrame(-17, -10, 27, 27, 52, 186)
	SpriteFrame(-16, -24, 32, 32, 52, 34)
	SpriteFrame(-8, -16, 32, 32, 85, 34)
	SpriteFrame(-8, -16, 32, 32, 85, 34)
	SpriteFrame(-16, -24, 32, 32, 52, 34)
	SpriteFrame(-16, -26, 43, 42, 52, 100)
	SpriteFrame(-16, -26, 43, 42, 52, 100)
	SpriteFrame(-16, -26, 43, 42, 52, 100)
	SpriteFrame(-16, -26, 43, 42, 52, 100)

	temp0 = 0
	RedSpring_value28 = DebugMode_ObjCount
	while temp0 < 8
		SetTableValue(TypeName[Red Spring], DebugMode_ObjCount, DebugMode_TypesTable)
		SetTableValue(RedSpring_DebugDraw, DebugMode_ObjCount, DebugMode_DrawTable)
		SetTableValue(RedSpring_DebugSpawn, DebugMode_ObjCount, DebugMode_SpawnTable)
		DebugMode_ObjCount++
		temp0++
	loop
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
